##############################################################################
##                      What's new in WDOSX 0.95                            ##
##############################################################################

Fixed bugs since WDOSX 0.95 beta 5:
------------------------------------------------------------------------------

[KERNEL] After a call to INT21/4B00h (execute child program) the DTA would not
         have been restored, causing subsequent FindFirst/FindNext calls to
         fail.
[KERNEL] DPMI functions 501h/502h/503h did malfunction under certain circum-
         stances. This has been a rather serious issue and (hopefully) has
         been fixed now.
[KERNEL] Removed an existing 64MB barrier in WDOSX memory allocation. Up to 2
         GB of memory are supported now.
[WIN32]  VirtualQuery does now return information when called with a pointer
         into the main program's memory block, making Delphi 3/4 display the
         correct error address on a runtime error.
[WIN32]  Delphi 4 would call VariantClear on exit even though no variants
         were used throughout the entire program. Therefore, VarinatClear has
         been implemented to do somewhat more than just trigger a breakpoint.
         (Getting rid of Runtime Error 255 on exit of a D4 program)
[DJGPP]  It was impossible to load a stubbed .coff into Wudebug. Not anymore.
[RDOFF]  Fixed a bug where a rather big header would overwrite code and/or data
         of the main program during the load process.
[DELPHI] Changed DOS.EnvStr() index base from 0 to 1 (as in BP)
[DELPHI] DOS.GetEnv() now returns an empty string if unsuccessful (as in BP)
[DELPHI] Fixed DOS.Exec() destroying random memory.

New stuff since WDOSX 0.95 beta 5:
------------------------------------------------------------------------------

[WIN32]  Added limited support for CreateProcess and friends. Mainly done in
         order to support shelling to DOS from within a TV32 application.
[WIN32]  Added some more API functions or stubs thereof to provide support for
         Delphi 4 and BCB.

Fixed bugs since WDOSX 0.95 beta 4:
------------------------------------------------------------------------------

[WIN32]  Fixed occasional Delphi Runtime Errors during Getmem/Freemem sequences
         The Delphi RTL is assuming any memory block obtained with VirtualAlloc
         to be 16k aligned whereas DPMI gives you only 4k alignment.
[WIN32]  Fixed findfirst/findnext functions. These were returning unicode
         strings even when not supposed to.
[WIN32]  Fixed loader errors with certain kinds of PE images, such as these
         created by BCB.

New stuff since WDOSX 0.95 beta 4:
------------------------------------------------------------------------------

[WIN32]  Added lots of functions to the API emulation to support TV32 as well
         as MSVC++. Mainly the Win32 console support has been greatly enhanced.
         Added too many functions to list.

Fixed bugs since WDOSX 0.95 beta 3:
------------------------------------------------------------------------------

[WFSE]   Fixed a rather severe bug in the WFSE file cacheing routines. Under
         certain circumstances, there would have been a cache miss reported
         when it actually was a cache hit (performance decrease) or, what is
         worse, we would have had a cache miss but a cache hit will be reported
         which would lead to read data corruption for WFSE compressed files.
         One obvious symptom was that a Watcom LE executable would work fine
         when uncompressed but in some cases will fail when compressed.
[WIN32]  Sometimes, the executable would fail to load an attached .WDL even
         though everything seems to be alright and wdir shows that the WDL
         really is attached.

New stuff since WDOSX 0.95 beta 3:
------------------------------------------------------------------------------

[WFSE]   Compression and automatic WDL attachments are optional now, for quick
         turnaround during development. Usage is: stubit -nowfse myexe.exe
[DEBUG]  The debugger now works with LE executables too.

Fixed bugs since WDOSX 0.95 beta 2:
------------------------------------------------------------------------------

[WATCOM] Severe problem with the loader & stubit.exe's LE executable detection
         fixed. Mind you it required only a tiny little change. The reason was
         that wdosxle.exe had an odd number of bytes.

Fixed bugs since WDOSX 0.95 beta 1:
------------------------------------------------------------------------------

[Win32] SetFilePointer now really returns the correct result
        Note: This bug was also present in WDOSX 0.94 final!
[Win32] Added workaround for zero sized DLL fixup sections TLINK32 would create
        (Manifested itself in stubit.exe crash when adding the WDL in question)
[Win32] Fixed incorrect registration entry of KERNEL32.WDL in WDL directory
[RDOFF] Fixed ARGV[0] bug (it would just return garbage)

New stuff since WDOSX 0.95 beta 1:
------------------------------------------------------------------------------

[DJGPP] Added support for DJGPPv2 .COFF executables
        Basically, there was DJGPP support all the time, but it wasn't that
        obvious. Now it is.
[Win32] Added stub functions for Global* and QueryPerformance*
[Win32] Added GetEnvironmentStringsA as an alias for GetEnvironmentStrings

Fixed bugs since WDOSX 0.95 alpha 6:
------------------------------------------------------------------------------

   ftell() in Borland C++ would always return 0
       (root cause: _llseek did not return anything)
   Delphi DLLs would sometimes fail during initialization
       (root cause: wrong order of paramters when calling DLL entry point,
        TlsAlloc() did not really work)
   Stubit.exe would fail on computers with 4MB or less (Sorry 'bout that!)
       (root cause: various issues with VirtualAlloc)
   More Win32 API bugs have been fixed but I forgot which...

New since WDOSX 0.94:
------------------------------------------------------------------------------

Improved support for NASM. WDOSX now supports RDOFF as an input format. RDOFF
has numerous advantages over flat form binary. See the WDOSX documentation for
details.

Added support for DOS32 style executables (4 sub- formats), mainly for TMT
Pascal support.

True Flat memory model for all relocatable executable formats.

Default exception handler of the kernel has been rewritten to also catch
unhandled exceptions in a DOS box.

Some minor internal changes to the kernel to further increase DPMI compliance.

File system extensions API added, see documentation for further details.

Executable compression added. Except for MZ and binary, anything will be
compressed. Compression is a bit slow, currently. Decompression, however, is
really fast.

Support for Delphi 3.01+ added (getting rid of some unsupported dynalink
messages)

The source code of the Win32 API emulation has been released.
